"use strict";function _classCallCheck(e,o){if(!(e instanceof o))throw new TypeError("Cannot call a class as a function")}!function(){angular.module("schemaFormBuilder",["builder","ui.bootstrap"])}(),angular.module("schemaFormBuilder").run(["$templateCache",function(e){e.put("builder/decorators/typehead/bootstrap-typehead-decorator.tpl.html",'<div class="form-group">\n  <label class="control-label" ng-if="showTitle()">{{showTitle()}}</label>\n  <input class="form-control" type="text" ng-model="$$value$$"\n         uib-typeahead="item for item in form.options | filter:$viewValue | limitTo:8">\n</div>')}]),angular.module("schemaFormBuilder").run(["$templateCache",function(e){e.put("builder/decorators/simple-array/bootstrap-simple-array-decorator.tpl.html",'<div sf-array="form" class="schema-form-array {{form.htmlClass}}" ng-model="$$value$$"\n     ng-model-options="form.ngModelOptions"><label class="control-label" ng-show="showTitle()">{{ form.title }}</label>\n  <ol class="list-group" ng-model="modelArray" ui-sortable="">\n    <li class="list-group-item {{form.fieldHtmlClass}}" ng-repeat="item in modelArray track by $index">\n      <button ng-hide="form.readonly || form.remove === null" ng-click="deleteFromArray($index)"\n              style="position: absolute;z-index: 20;right: 10px;" type="button" class="close pull-right"><span\n          aria-hidden="true">&times;</span><span class="sr-only">Close</span></button>\n      <sf-decorator ng-init="arrayIndex = $index" form="copyWithIndex($index)"></sf-decorator>\n    </li>\n  </ol>\n  <div class="clearfix" style="padding: 15px;">\n    <button ng-hide="form.readonly || form.add === null" ng-click="appendToArray()" type="button"\n            class="btn {{ form.style.add || \'btn-default\' }} pull-right"><i class="glyphicon glyphicon-plus"></i> {{\n      form.add || \'Add\'}}\n    </button>\n  </div>\n  <div class="help-block" ng-show="(hasError() && errorMessage(schemaError())) || form.description"\n       ng-bind-html="(hasError() && errorMessage(schemaError())) || form.description"></div>\n</div>')}]),angular.module("schemaFormBuilder").run(["$templateCache",function(e){e.put("builder/decorators/select-box/bootstrap-select-box-decorator.tpl.html",'<div class="form-group">\n  <label class="control-label" ng-if="showTitle()">{{showTitle()}}</label>\n  <select-box model="$$value$$" config="form.config" value-field="{{form.valueField}}" display-field="{{form.displayField}}"></select-box>\n</div>')}]),angular.module("schemaFormBuilder").run(["$templateCache",function(e){e.put("builder/decorators/number/bootstrap-number-decorator.tpl.html",'<div class="form-group schema-form-{{form.type}} {{form.htmlClass}}"\n     ng-class="{\'has-error\': form.disableErrorState !== true && hasError(), \'has-success\': form.disableSuccessState !== true && hasSuccess(), \'has-feedback\': form.feedback !== false }">\n  <label class="control-label {{form.labelHtmlClass}}" ng-class="{\'sr-only\': !showTitle()}"\n         for="{{form.key.slice(-1)[0]}}">{{form.title}}</label>\n  <input  string-to-number ng-if="!form.fieldAddonLeft && !form.fieldAddonRight" ng-show="form.key" type="number" step="{{ form.precision || \'any\' }}"\n         sf-changed="form" placeholder="{{form.placeholder}}" class="form-control {{form.fieldHtmlClass}}"\n         id="{{form.key.slice(-1)[0]}}" ng-model-options="form.ngModelOptions" ng-model="$$value$$"\n         ng-disabled="form.readonly" schema-validate="form" name="{{form.key.slice(-1)[0]}}"\n         aria-describedby="{{form.key.slice(-1)[0] + \'Status\'}}">\n  <div ng-if="form.fieldAddonLeft || form.fieldAddonRight"\n       ng-class="{\'input-group\': (form.fieldAddonLeft || form.fieldAddonRight)}">\n    <span ng-if="form.fieldAddonLeft" class="input-group-addon" ng-bind-html="form.fieldAddonLeft"></span>\n    <input  string-to-number ng-show="form.key" type="number" step="{{ form.precision || \'any\' }}" sf-changed="form"\n           placeholder="{{form.placeholder}}" class="form-control {{form.fieldHtmlClass}}"\n           id="{{form.key.slice(-1)[0]}}" ng-model-options="form.ngModelOptions" ng-model="$$value$$"\n           ng-disabled="form.readonly" schema-validate="form" name="{{form.key.slice(-1)[0]}}"\n           aria-describedby="{{form.key.slice(-1)[0] + \'Status\'}}">\n    <span ng-if="form.fieldAddonRight" class="input-group-addon" ng-bind-html="form.fieldAddonRight"></span>\n  </div>\n  <span ng-if="form.feedback !== false" class="form-control-feedback"\n        ng-class="evalInScope(form.feedback) || {\'glyphicon\': true, \'glyphicon-ok\': hasSuccess(), \'glyphicon-remove\': hasError() }"\n        aria-hidden="true">\n  </span> <span ng-if="hasError() || hasSuccess()" id="{{form.key.slice(-1)[0] + \'Status\'}}"\n                class="sr-only">{{ hasSuccess() ? \'(success)\' : \'(error)\' }}</span>\n  <div class="help-block" sf-message="form.description"></div>\n</div>')}]),angular.module("schemaFormBuilder").run(["$templateCache",function(e){e.put("builder/decorators/datepicker/datepicker.html",'<div class="form-group schema-form-{{form.type}} {{form.htmlClass}}"\n     ng-class="{\'has-error\': form.disableErrorState !== true && hasError(), \'has-success\': form.disableSuccessState !== true && hasSuccess(), \'has-feedback\': form.feedback !== false }">\n  <label class="control-label {{form.labelHtmlClass}}" ng-class="{\'sr-only\': !showTitle()}"\n         for="{{form.key.slice(-1)[0]}}">{{form.title}}</label>\n\n  <p class="input-group">\n      <!--TODO:: removed schema-validate="form" consider having a custom validator-->\n      <input type="text"\n           id="{{form.key.slice(-1)[0]}}"\n           class="form-control"\n           sf-changed="form"\n           placeholder="{{form.placeholder}}"\n           uib-datepicker-popup="dd.MM.yyyy"\n           ng-model="$$value$$"\n           ng-model-options="form.ngModelOptions"\n           is-open="form.open"\n           min-date="form.minDate"\n           max-date="form.maxDate"\n           init-date="form.defaultDate"\n           close-text="Close"/>\n        <span class="input-group-btn">\n             <button type="button" class="btn btn-default" ng-click="form.open = !form.open"><i\n                 class="fa fa-calendar-o"></i></button>\n        </span>\n  </p>\n  <span class="help-block">{{ (hasError() && errorMessage(schemaError())) || form.description}}</span>\n</div>')}]),angular.module("schemaFormBuilder").run(["$templateCache",function(e){e.put("builder/decorators/ace/ui-ace.html",'<div class="form-group" ng-class="{\'has-error\': hasError()}">\n    <label class="control-label" ng-show="showTitle()">{{form.title}}</label>\n\n    <div ui-ace="form.aceOptions" style="form.style" ng-model="$$value$$" schema-validate="form"></div>\n\n    <span class="help-block">{{ (hasError() && errorMessage(schemaError())) || form.description}}</span>\n</div>')}]),angular.module("schemaFormBuilder").run(["$templateCache",function(e){e.put("builder/decorators/accordion-array/bootstrap-accordion-array-decorator.tpl.html",'<div sf-array="form" class="schema-form-array {{form.htmlClass}}" ng-model="$$value$$"\n     ng-model-options="form.ngModelOptions">\n    <uib-accordion ng-model="modelArray" ui-sortable="">\n        <uib-accordion-group ng-repeat="item in modelArray track by $index" is-open="item.open">\n            <uib-accordion-heading class="{{form.fieldHtmlClass}}">\n                {{interp(form.title,{\'$index\':$index, value: item}) || $index}}\n            </uib-accordion-heading>\n            <sf-decorator ng-init="arrayIndex = $index" form="copyWithIndex($index)"></sf-decorator>\n            <button ng-hide="form.readonly || form.remove === null" ng-click="deleteFromArray($index)" type="button"\n                    class="btn btn-danger pull-right">\n                Delete\n                <i class="fa fa-trash"></i>\n            </button>\n        </uib-accordion-group>\n    </uib-accordion>\n    <div class="clearfix bottom-spaced">\n        <button ng-hide="form.readonly || form.add === null" ng-click="appendToArray();form.openLast()" type="button"\n                class="btn {{ form.style.add || \'btn-default\' }} pull-right">{{\n            form.add || \'Add\'}}\n        </button>\n    </div>\n    <div class="help-block" ng-show="(hasError() && errorMessage(schemaError())) || form.description"\n         ng-bind-html="(hasError() && errorMessage(schemaError())) || form.description"></div>\n</div>\n\n\n')}]),angular.module("schemaFormBuilder").run(["$templateCache",function(e){e.put("builder/views/open.tpl.html",'<div class="modal-body">\n    <table class="table table-striped">\n        <tr ng-repeat="form in modal.forms">\n            <td>{{ form.name}}</td>\n            <td>\n                <button class="btn btn-success btn-sm pull-right" ng-click="modal.open(form)">Open</button>\n                <button class="btn btn-danger margin-right-20 btn-sm pull-right" ng-click="modal.delete($index, form)">Delete</button>\n            </td>\n        </tr>\n    </table>\n</div>\n<div class="modal-footer">\n    <button class="btn btn-success btn-sm" type="button" ng-click="modal.open({fields: []})">New Form</button>\n    <button class="btn btn-warning btn-sm" type="button" ng-click="modal.cancel()">Cancel</button>\n</div>')}]),angular.module("schemaFormBuilder").run(["$templateCache",function(e){e.put("builder/views/builder.tpl.html",'\n<div class="body-section">\n    <div class="header">\n        <h4>\n            <img src="images/logo.png" alt="">\n            Schema Form <strong>Builder</strong> <span class="grey">/ {{ builder.model.name || \'Untitled Form\'}}</span>\n            <a class="btn btn-sm btn-primary pull-right" ng-click="builder.newForm()">New Form</a>\n            <a class="btn btn-sm btn-warning pull-right margin-right-20" ng-click="builder.openForm()">My previous Forms</a>\n        </h4>\n    </div>\n    <div class="container">\n        <!--<uib-alert type="default">Build your own form</uib-alert>-->\n\n        <div class="row">\n            <div class="col-sm-6 builder">\n                <form name="builderForm" ng-submit="builder.saveForm(builderForm)">\n                    <div sf-schema="builder.schema" sf-form="builder.form" sf-model="builder.model"\n                         sf-options="{ formDefaults: { ngModelOptions: { updateOn: \'blur\' } }}"></div>\n                </form>\n            </div>\n            <div class="col-sm-6 preview">\n                <h4>preview</h4>\n                <div sf-schema="builder.display.schema" sf-form="builder.display.form"\n                     sf-model="builder.display.model"></div>\n            </div>\n        </div>\n        <div class="instructions col-xs-12" ng-class="{\'visible\' : builder.instructionsVisible}">\n            <div class="">\n                <div ng-if="builder.model.type == \'schema-form\'">\n                    <h2>Instructions <button class="btn btn-sm btn-primary pull-right"\n                    ng-click="builder.instructionsVisible = false">back</button> </h2>\n                    <p>In your angular project do the following</p>\n                    <h4>First, Install angular-schema form</h4>\n                    <p>Using bower:</p>\n                    <pre>bower install angular-schema-form</pre>\n                    <p>Using npm:</p>\n                    <pre>npm install angular-schema-form</pre></p>\n                    <p>Then add it as a dependency to your module</p>\n                    <pre>angular.module(\'myModule\', [\'schemaForm\'])</pre>\n                    <div class="separated"></div>\n                    <h4>Secondly, Specify your schema and form</h4>\n                    <p>In your controller, add the following schema and form an pass it to your views</p>\n                    <div class="row">\n                        <div class="col-sm-6">\n                            <h5>Schema</h5>\n                            <pre> {{ builder.output.schema | json }}</pre>\n                        </div>\n                        <div class="col-sm-6">\n                            <h5>Forms</h5>\n                            <pre> {{ builder.output.form | json }}</pre>\n                        </div>\n                    </div>\n                    <div class="separated"></div>\n                    <h4>Lastly, Display the form in your view</h4>\n                    <pre class="language-html" data-lang="html">\n                        &lt;form name="myForm" ng-submit="submit()"&gt; <br>\n                        &lt;div sf-schema="schema" sf-form="form" sf-model="model"&gt;&lt;/div&gt;<br>\n                        &lt;input type="submit" value="Submit"&gt;<br>\n                            &lt;button type="button" ng-click="goBack()"&gt;Cancel&lt;/button&gt;<br>\n                        &lt;/form&gt;\n                    </pre>\n                </div>\n                <div ng-if="builder.model.type == \'bootstrap\'">\n                    <h3>To be created</h3>\n                    <pre> {{ builder.output | json }}</pre>\n                </div>\n\n            </div>\n        </div>\n    </div>\n</div>')}]),function(){angular.module("builder",["angular-growl","angular-locker","schemaForm","ui.bootstrap","ui.router","ui.sortable"]).config(["lockerProvider",function(e){e.defaults({driver:"local",namespace:"ro",separator:".",eventsEnabled:!0,extend:{}})}]).config(["growlProvider",function(e){e.globalTimeToLive({success:1e3,error:2e3,warning:3e3,info:4e3})}])}(),function(){function e(e,o,t){var r=function(o,r,n){var a;return"typehead"===r.type||"typehead"===r.type["x-schema-form"]||!_.isUndefined(a)&&"typehead"===a.type?(a=e.stdFormObj(o,r,n),n.lookup[t.stringify(n.path)]=a,a):void 0};e.defaults.string.unshift(r),o.addMapping("bootstrapDecorator","typehead","builder/decorators/typehead/bootstrap-typehead-decorator.tpl.html"),o.createDirective("typehead","builder/decorators/typehead/bootstrap-typehead-decorator.tpl.html")}e.$inject=["schemaFormProvider","schemaFormDecoratorsProvider","sfPathProvider"],angular.module("builder").config(e)}(),function(){function e(e,o,t){o.addMapping("bootstrapDecorator","simple-array","builder/decorators/simple-array/bootstrap-simple-array-decorator.tpl.html"),o.createDirective("simple-array","builder/decorators/simple-array/bootstrap-simple-array-decorator.tpl.html")}e.$inject=["schemaFormProvider","schemaFormDecoratorsProvider","sfPathProvider"],angular.module("builder").config(e)}(),function(){function e(e,o,t){o.addMapping("bootstrapDecorator","select-box","builder/decorators/select-box/bootstrap-select-box-decorator.tpl.html"),o.createDirective("select-box","builder/decorators/select-box/bootstrap-select-box-decorator.tpl.html")}e.$inject=["schemaFormProvider","schemaFormDecoratorsProvider","sfPathProvider"],angular.module("builder").config(e)}(),function(){function e(e){e.addMapping("bootstrapDecorator","number","builder/decorators/number/bootstrap-number-decorator.tpl.html")}e.$inject=["schemaFormDecoratorsProvider"],angular.module("builder").config(e)}(),angular.module("schemaForm").config(["schemaFormProvider","schemaFormDecoratorsProvider","sfPathProvider",function(e,o,t){var r=function(o,r,n){if("string"===r.type&&"date"===r.format){var a=e.stdFormObj(o,r,n);return a.key=n.path,a.type="datepicker",n.lookup[t.stringify(n.path)]=a,a}};e.defaults.string.unshift(r),o.addMapping("bootstrapDecorator","datepicker","builder/decorators/datepicker/datepicker.html"),o.createDirective("datepicker","builder/decorators/datepicker/datepicker.html")}]),angular.module("schemaForm").config(["schemaFormProvider","schemaFormDecoratorsProvider","sfPathProvider",function(e,o,t){var r=function(o,r,n){if("ace"===r.type){var a=e.stdFormObj(o,r,n);return a.key=n.path,a.type="ace",n.lookup[t.stringify(n.path)]=a,a}};e.defaults.string.unshift(r),o.addMapping("bootstrapDecorator","ace","builder/decorators/ace/ui-ace.html"),o.createDirective("ace","builder/decorators/ace/ui-ace.html")}]),function(){function e(e,o,t){o.addMapping("bootstrapDecorator","accordion-array","builder/decorators/accordion-array/bootstrap-accordion-array-decorator.tpl.html"),o.createDirective("accordion-array","builder/decorators/accordion-array/bootstrap-accordion-array-decorator.tpl.html")}e.$inject=["schemaFormProvider","schemaFormDecoratorsProvider","sfPathProvider"],angular.module("builder").config(e)}(),function(){function e(){var e={};e.generateStandardAttributes=function(e,o){var t=void 0,r=["key","condition","onChange","notitle","showAdvanced","validationMessage","onChange","ngModelOptions","condition","fieldAddonLeft","fieldAddonRight","description","showAdvanced","validationMessage","onChange","feedback","disableSuccessState","disableErrorState","placeholder","ngModelOptions","readonly","htmlClass","destroyStrategy","copyValueTo","fieldHtmlClass","labelHtmlClass"];return o.schema.properties[e.key]={title:e.title,description:e.description},t=_.pick(e,r),o.form.push(t),o},e.updateForm=function(e,o,t,r){var n=_.findKey(e.form,"key",o);return e.form[n][t]=r,e},e.generateTextField=function(e,o){return o.schema.properties[e.key].type="string",o},e.generateTextareaField=function(o,t){return t.schema.properties[o.key].type="string",t=e.updateForm(t,o.key,"type","textarea")},e.generateEmailField=function(e,o){return o.schema.properties[e.key].type="string",o.schema.properties[e.key].format="email",o},e.generateDropdownField=function(e,o){return o.schema.properties[e.key].type="string",o.schema.properties[e.key]["enum"]=e.options,o},e.generateDateField=function(e,o){return o.schema.properties[e.key].type="string",o.schema.properties[e.key].format="date",o},e.generateTimeField=function(e,o){return o.schema.properties[e.key].type="string",o.schema.properties[e.key].format="time",o},e.generateDateTimeField=function(e,o){return o.schema.properties[e.key].type="string",o.schema.properties[e.key].format="date-time",o};var o=function(o,t){var r=_.camelCase("generate_"+o.type.replace("-","_")+"_field");return t=e.generateStandardAttributes(o,t),"function"==typeof e[r]?e[r](o,t):(t.schema.properties[o.key]={type:o.type,title:o.title},t)};return e.generateFields=function(e){var t={schema:{type:"object",properties:{}},form:[]};return _.isArray(e.fields)&&e.fields.forEach(function(e){_.isUndefined(e.type)||_.isUndefined(e.key)||(t=o(e,t))}),t},e}angular.module("builder").factory("Converter",e)}(),function(){var e=function o(e,t,r,n,a){function l(o){s.output=e.generateFields(o),console.log(s.output),s.display=angular.copy(s.output)}function i(){s.model.name&&s.model.name.length>0&&(s.forms[_.snakeCase(s.model.name)]=s.model,r.put("schema_forms",s.forms),t.success("Form "+s.model.name+" Saved"))}_classCallCheck(this,o);var s=this;s.forms=r.get("schema_forms",{}),console.log(s.forms),s.schema={type:"object",title:"Comment",properties:{name:{type:"string"},type:{type:"string",title:"Form Output","enum":["schema-form","bootstrap"]},fields:{type:"array",title:"Fields",items:{type:"object",properties:{open:{type:"boolean","default":!0},type:{title:"Type",type:"string","enum":["text","textarea","number","email","password","dropdown","radios","radios-inline","radiobuttons","checkbox","checkboxes","boolean","date","time","date-time","button","submit","reset","help","template"]},key:{title:"Key",type:"string"},title:{condition:"model.notitle",title:"Title",type:"string"},notitle:{type:"boolean",title:"Don't show title"},description:{title:"Description",type:"string"},validationMessage:{title:"Validation Message",description:"A custom validation error message. It can be a string, an object with error codes as key and messages as values or a custom message function",type:"string"},onChange:{title:"onChange",description:"onChange event handler, expression or function. For expression, <code>modelValue</code> and <code>form</code> are both available. For a function, they will be passed as parameters in that order",type:"string"},feedback:{title:"Feedback Icon",description:'Inline feedback icons. To turn off just set feedback to false. If set to a string that string is evaluated by a ngClass in the decorators scope. If not set att all the default value is <code>{ "glyphicon": true, "glyphicon-ok": hasSuccess(), "glyphicon-remove": hasError() }</code>',type:"string"},disableSuccessState:{type:"boolean",title:"Disable Success State","default":!1},disableErrorState:{type:"boolean",title:"Disable Error State","default":!1},placeholder:{title:"Placeholder",description:"Placeholder on inputs and textarea",type:"string"},ngModelOptions:{title:"ng-Model Options",description:"Passed along to ng-model-options",type:"string"},readonly:{type:"boolean",title:"Readonly","default":!1},htmlClass:{title:"Class",description:"CSS Class(es) to be added to the container div e.g. : 'street foobar'",type:"string"},destroyStrategy:{title:"Destroy Strategy",description:"One of <code>null</code>, <code>empty</code> , <code>remove</code>, or <code>retain</code>. Changes model on $destroy event. default is <code>remove</code>.",type:"string"},copyValueTo:{title:"Copy Value To",description:"Copy values to these schema keys e.g ['address.street']. The receiving fields can be shown, but the intent for them is to be hidden.",type:"string"},fieldHtmlClass:{title:"Field Class",description:"CSS Class(es) to be added to field input (or similar)",type:"string"},labelHtmlClass:{title:"Label Class",description:"CSS Class(es) to be added to the label of the field (or similar)",type:"string"},condition:{title:"Condition",description:"Show or hide field depending on an angular expression e.g 'model.age < 18'. The expression has access to <code>model</code>, <code>modelValue</code>, <code> arrayIndex</code>.  The condition need not reference a model value it could be anything on scope.",type:"string"},fieldAddonLeft:{title:"Field Addon - Left",description:"Add html code to left of input field. For reference check <a target='_blank' href='http://getbootstrap.com/components/#input-groups'>bootstrap input groups</a>.",type:"string"},fieldAddonRight:{title:"Field Addon - Right",description:"Add html code to right of input field. For reference check <a target='_blank' href='http://getbootstrap.com/components/#input-groups'>bootstrap input groups</a>.",type:"string"},onClick:{title:"onClick",description:"Function to call when a button/submit is clicked",type:"string"},showAdvanced:{title:"Show advance options",type:"boolean"}},required:["type","key"]}}},required:["name"]},s.model={},s.form=[{type:"section",htmlClass:"row main-info",items:[{key:"name",htmlClass:"col-sm-6",placeholder:"name of the form",notitle:!0,fieldHtmlClass:"field-name",labelHtmlClass:"field-name-label"},{key:"type",htmlClass:"col-sm-6",fieldHtmlClass:"output-type",labelHtmlClass:"output-type-label"}]},{type:"section",htmlClass:"my-field row",items:[{type:"section",htmlClass:"col-sm-6",items:[{type:"help",helpvalue:"<h4>My Fields:</h4>"}]},{type:"section",htmlClass:"col-sm-6",items:[{type:"button",onClick:function(){s.instructionsVisible=!0},style:"btn-success btn-sm pull-right",title:"Generate Schema"},{type:"submit",style:"btn-success btn-sm pull-right margin-right-20",title:"Save"}]}]},{key:"fields",type:"accordion-array",title:'{{ value.title || "Field "+ $index}}',add:"Add a new Field",remove:"Remove Field",startEmpty:!0,items:[{key:"fields[].title",htmlClass:"hide-label",placeholder:"Title"},{type:"section",htmlClass:"row",items:[{key:"fields[].type",placeholder:"Type",notitle:!0,htmlClass:"col-sm-6 hide-label"},{key:"fields[].key",placeholder:"Key (Unique Identifier)",notitle:!0,htmlClass:"col-sm-6 hide-label"}]},{key:"fields[].open",notitle:!0,type:"hidden"},{key:"fields[].description",type:"textarea",placeholder:"Description",notitle:!0},{type:"section",htmlClass:"row",items:[{key:"fields[].notitle",htmlClass:"col-sm-6"},{key:"fields[].showAdvanced",htmlClass:"col-sm-6"}]},{condition:"model.fields[arrayIndex].showAdvanced",type:"help",helpvalue:"<hr/>"},{type:"section",htmlClass:"row",items:[{type:"section",htmlClass:"col-md-4",items:[{condition:"model.fields[arrayIndex].showAdvanced",key:"fields[].disableSuccessState"}]},{type:"section",htmlClass:"col-md-4",items:[{condition:"model.fields[arrayIndex].showAdvanced",key:"fields[].disableErrorState"}]},{type:"section",htmlClass:"col-md-4",items:[{condition:"model.fields[arrayIndex].showAdvanced",key:"fields[].readonly"}]}]},{condition:"model.fields[arrayIndex].showAdvanced",type:"help",helpvalue:"<hr/>"},{condition:"model.fields[arrayIndex].showAdvanced",key:"fields[].validationMessage",type:"textarea"},{condition:"model.fields[arrayIndex].showAdvanced",key:"fields[].onChange",type:"textarea"},{condition:"model.fields[arrayIndex].showAdvanced",key:"fields[].feedback"},{condition:"model.fields[arrayIndex].showAdvanced",key:"fields[].placeholder"},{condition:"model.fields[arrayIndex].showAdvanced",key:"fields[].ngModelOptions",type:"textarea"},{condition:"model.fields[arrayIndex].showAdvanced",key:"fields[].htmlClass"},{condition:"model.fields[arrayIndex].showAdvanced",key:"fields[].destroyStrategy"},{condition:"model.fields[arrayIndex].showAdvanced",key:"fields[].copyValueTo"},{condition:"model.fields[arrayIndex].showAdvanced",key:"fields[].fieldHtmlClass"},{condition:"model.fields[arrayIndex].showAdvanced",key:"fields[].labelHtmlClass"},{condition:"model.fields[arrayIndex].showAdvanced",key:"fields[].condition"},{condition:"model.fields[arrayIndex].showAdvanced",key:"fields[].fieldAddonLeft"},{condition:"model.fields[arrayIndex].showAdvanced",key:"fields[].fieldAddonRight"}]}],s.output={schema:{},form:[]},s.saveForm=function(e){n.$broadcast("schemaFormValidate"),e.$valid&&i()},s.newForm=function(){i(),s.model={fields:[]},console.log(s.model)},s.openForm=function(){var e=a.open({templateUrl:"builder/views/open.tpl.html",controller:["$uibModalInstance","forms",function(e,o){var t=this;t.forms=o,t.open=function(o){e.close(o)},t["delete"]=function(e,o){confirm("About to delete "+o.name)&&(t.forms.slice(t.forms,e,1),r.put("schema_forms",t.forms))},t.cancel=function(){e.dismiss()}}],controllerAs:"modal",resolve:{forms:function(){return s.forms}}});e.result.then(function(e){i(),s.model=e,l(s.model)})},s.model.name||s.openForm(),n.$watch(function(){return s.model},function(e){l(e)},!0)};e.$inject=["Converter","growl","locker","$scope","$uibModal"],angular.module("builder").controller("BuilderCtrl",e)}(),function(){function e(e){e.state("builder",{url:"/builder",templateUrl:"builder/views/builder.tpl.html",controller:"BuilderCtrl",controllerAs:"builder"})}e.$inject=["$stateProvider"],angular.module("builder").config(e)}(),function(){function e(e){e.otherwise("/builder")}e.$inject=["$urlRouterProvider"],angular.module("schemaFormBuilder").config(e)}();
//# sourceMappingURL=app-bb3a1a52b2.js.map
